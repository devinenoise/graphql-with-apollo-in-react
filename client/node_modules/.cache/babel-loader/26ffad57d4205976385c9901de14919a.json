{"ast":null,"code":"var _jsxFileName = \"K:\\\\Coding\\\\graphql-demo\\\\client\\\\src\\\\Components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CREATE_USER_MUTATION } from '../GraphQL/Mutations';\nimport { useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [createUser, {\n    error\n  }] = useMutation(CREATE_USER_MUTATION);\n\n  const addUser = () => {\n    createUser({\n      variables: {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password\n      }\n    });\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"First Name\",\n      onChange: e => {\n        setFirstName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      onChange: e => {\n        setLastName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: e => {\n        setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Password\",\n      onChange: e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUser,\n      children: \" Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"eIxJ8Fo9ksKZLs5JEEKFl0J42ec=\", false, function () {\n  return [useMutation];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["K:/Coding/graphql-demo/client/src/Components/Form.js"],"names":["React","useState","CREATE_USER_MUTATION","useMutation","Form","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","createUser","error","addUser","variables","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACY,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAA0BX,WAAW,CAACD,oBAAD,CAA3C;;AAEA,QAAMa,OAAO,GAAG,MAAM;AACpBF,IAAAA,UAAU,CAAC;AACTG,MAAAA,SAAS,EAAE;AACTX,QAAAA,SAAS,EAAEA,SADF;AAETE,QAAAA,QAAQ,EAAEA,QAFD;AAGTE,QAAAA,KAAK,EAAEA,KAHE;AAITE,QAAAA,QAAQ,EAAEA;AAJD;AADF,KAAD,CAAV;;AASA,QAAIG,KAAJ,EAAW;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;AACF,GAbD;;AAcA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,QAAQ,EAAEK,CAAC,IAAI;AACbb,QAAAA,YAAY,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,QAAQ,EAAEF,CAAC,IAAI;AACbX,QAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,QAAQ,EAAEF,CAAC,IAAI;AACbT,QAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAfF,eAsBE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,QAAQ,EAAEF,CAAC,IAAI;AACbP,QAAAA,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAvDQX,I;UAMyBD,W;;;KANzBC,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { CREATE_USER_MUTATION } from '../GraphQL/Mutations';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nfunction Form() {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [createUser, { error }] = useMutation(CREATE_USER_MUTATION);\r\n\r\n  const addUser = () => {\r\n    createUser({\r\n      variables: {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password\r\n      }\r\n    });\r\n\r\n    if (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        placeholder='First Name'\r\n        onChange={e => {\r\n          setFirstName(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Last Name'\r\n        onChange={e => {\r\n          setLastName(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Email'\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type='text'\r\n        placeholder='Password'\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={addUser}> Create User</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}